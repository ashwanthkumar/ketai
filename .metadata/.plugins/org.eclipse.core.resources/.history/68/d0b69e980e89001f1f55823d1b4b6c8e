package edu.uic.ketai;

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;

public class SensorProcessor implements SensorEventListener{
	private DataManager dataManager; 
    SensorManager sensorManager = null;
    private boolean collect = false;
	
	SensorProcessor(DataManager dm, SensorManager sm)
	{	
		dataManager = dm;
		sensorManager = sm;
		collect = true;
    }
	
	public void toggleCollect()
	{
		if(collect) collect = false;
		else collect = true;
	}
	
    public void onSensorChanged(int sensor, float[] values) {
    	if(!collect) return;
        synchronized (this) {
        	long nowTime = System.currentTimeMillis();
        	
            if (sensor == SensorManager.SENSOR_ORIENTATION) {
            	dataManager.insertSensorData(nowTime, SensorManager.SENSOR_ORIENTATION, values);
            }
            if (sensor == SensorManager.SENSOR_ACCELEROMETER) {
            	dataManager.insertSensorData(nowTime, SensorManager.SENSOR_ACCELEROMETER, values);
            }            
        }
    }

	public void onAccuracyChanged(Sensor arg0, int arg1) {
		// TODO Auto-generated method stub
		
	}

	public void onSensorChanged(SensorEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	public void resume()
	{
	    // register this class as a listener for the orientation and accelerometer sensors
		sensorManager.registerListener(this, 
	            SensorManager.SENSOR_ORIENTATION |SensorManager.SENSOR_ACCELEROMETER,
	            SensorManager.SENSOR_DELAY_NORMAL);
	}
	
    public void stop() {
        // unregister listener
    	sensorManager.unregisterListener(this);
    }

	public void onAccuracyChanged(int arg0, int arg1) {
		// TODO Auto-generated method stub
		
	}
}
